2023-04-12 00:13:50,315 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-6] El token ha expirado
2023-04-12 00:13:53,525 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-1] El token ha expirado
2023-04-12 00:13:53,531 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-3] El token ha expirado
2023-04-12 00:13:53,545 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-10] El token ha expirado
2023-04-12 00:13:53,561 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-9] El token ha expirado
2023-04-12 00:13:54,836 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-6] El token ha expirado
2023-04-12 00:13:54,837 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-7] El token ha expirado
2023-04-12 00:13:54,861 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-4] El token ha expirado
2023-04-12 00:13:54,874 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-8] El token ha expirado
2023-04-12 00:13:54,877 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-1] El token ha expirado
2023-04-12 00:13:56,576 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-3] El token ha expirado
2023-04-12 00:57:00,736 INFO org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [RMI TCP Connection(761)-127.0.0.1] Application shutdown requested.
2023-04-12 00:57:00,961 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(761)-127.0.0.1] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 00:57:00,962 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(761)-127.0.0.1] Stopping service [Tomcat]
2023-04-12 00:57:00,979 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(761)-127.0.0.1] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 00:57:01,012 WARN org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(761)-127.0.0.1] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 00:57:01,019 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(761)-127.0.0.1] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 00:57:01,029 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(761)-127.0.0.1] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 00:57:01,066 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [RMI TCP Connection(761)-127.0.0.1] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 00:57:01,120 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(761)-127.0.0.1] HikariPool-1 - Shutdown initiated...
2023-04-12 00:57:01,140 INFO com.zaxxer.hikari.HikariDataSource [RMI TCP Connection(761)-127.0.0.1] HikariPool-1 - Shutdown completed.
2023-04-12 11:48:23,004 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 11:48:23,006 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 11:48:23,059 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-04-12 11:48:23,059 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-04-12 11:48:24,592 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 11:48:24,595 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 11:48:24,667 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 11:48:24,669 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 11:48:24,672 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 11:48:24,675 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 11:48:24,678 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 11:48:24,682 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 11:48:24,685 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 11:48:24,686 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 81 ms. Found 0 JDBC repository interfaces.
2023-04-12 11:48:24,697 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 11:48:24,699 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 11:48:24,801 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 95 ms. Found 7 JPA repository interfaces.
2023-04-12 11:48:25,733 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 11:48:25,746 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 11:48:25,746 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 11:48:25,747 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 11:48:25,975 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 11:48:25,975 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2915 ms
2023-04-12 11:48:26,322 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 11:48:26,429 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 5.6.12.Final
2023-04-12 11:48:26,688 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-04-12 11:48:26,839 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-04-12 11:48:27,143 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-04-12 11:48:27,169 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 11:48:28,157 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 11:48:28,169 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 11:48:28,739 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 11:48:29,737 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 11:48:29,747 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4966ea30, org.springframework.security.web.context.SecurityContextPersistenceFilter@31fe4f99, org.springframework.security.web.header.HeaderWriterFilter@f0a604d, org.springframework.web.filter.CorsFilter@3cf353ed, org.springframework.security.web.authentication.logout.LogoutFilter@38bfcc59, com.tomassamper.apilol.security.JwtRequestFilter@4a57c8a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d9a947a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7514bf60, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@348083c5, org.springframework.security.web.session.SessionManagementFilter@615fb8cf, org.springframework.security.web.access.ExceptionTranslationFilter@47e6ee62, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1490ab5c]
2023-04-12 11:48:30,227 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 11:48:30,248 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 11:48:30,277 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 11:48:30,291 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 7.858 seconds (JVM running for 9.347)
2023-04-12 11:48:49,279 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 11:48:49,280 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 11:48:49,282 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2023-04-12 11:48:49,330 WARN com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-2] El token no viene con Bearer delante
2023-04-12 11:48:49,425 INFO com.tomassamper.apilol.controller.UserController [http-nio-8080-exec-2] Inicio sesion
2023-04-12 12:39:46,737 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 12:39:46,851 INFO org.apache.juli.logging.DirectJDKLog [Thread-5] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:39:46,851 INFO org.apache.juli.logging.DirectJDKLog [Thread-5] Stopping service [Tomcat]
2023-04-12 12:39:46,854 INFO org.apache.juli.logging.DirectJDKLog [Thread-5] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 12:39:46,860 WARN org.apache.juli.logging.DirectJDKLog [Thread-5] The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 12:39:46,862 INFO org.apache.juli.logging.DirectJDKLog [Thread-5] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 12:39:46,864 INFO org.apache.juli.logging.DirectJDKLog [Thread-5] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 12:39:46,875 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-5] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:39:46,883 INFO com.zaxxer.hikari.HikariDataSource [Thread-5] HikariPool-1 - Shutdown initiated...
2023-04-12 12:39:46,893 INFO com.zaxxer.hikari.HikariDataSource [Thread-5] HikariPool-1 - Shutdown completed.
2023-04-12 12:39:47,107 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 12:39:47,107 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 12:39:47,979 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:39:47,980 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 12:39:48,015 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:39:48,017 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:39:48,019 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:39:48,021 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:39:48,024 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:39:48,026 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:39:48,028 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:39:48,028 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 48 ms. Found 0 JDBC repository interfaces.
2023-04-12 12:39:48,034 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:39:48,034 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 12:39:48,106 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 71 ms. Found 7 JPA repository interfaces.
2023-04-12 12:39:48,244 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 12:39:48,245 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:39:48,245 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 12:39:48,246 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 12:39:48,341 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 12:39:48,341 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1230 ms
2023-04-12 12:39:48,429 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 12:39:48,467 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Starting...
2023-04-12 12:39:48,483 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Start completed.
2023-04-12 12:39:48,484 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 12:39:48,614 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 12:39:48,614 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:39:48,769 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 12:39:48,787 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueController': Unsatisfied dependency expressed through field 'leagueService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
2023-04-12 12:39:48,788 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:39:48,788 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Shutdown initiated...
2023-04-12 12:39:48,795 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Shutdown completed.
2023-04-12 12:39:48,796 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2023-04-12 12:39:48,808 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-04-12 12:39:48,840 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueController': Unsatisfied dependency expressed through field 'leagueService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:745)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:420)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1317)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at com.tomassamper.apilol.ChampLolApi21Application.main(ChampLolApi21Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 71 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 75 common frames omitted
2023-04-12 12:40:25,107 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 12:40:25,107 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 12:40:25,651 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:40:25,651 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 12:40:25,687 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:25,690 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:25,693 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:25,695 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:25,697 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:25,700 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:25,702 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:25,702 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 51 ms. Found 0 JDBC repository interfaces.
2023-04-12 12:40:25,707 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:40:25,707 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 12:40:25,807 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 99 ms. Found 7 JPA repository interfaces.
2023-04-12 12:40:25,906 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 12:40:25,907 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:40:25,907 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 12:40:25,907 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 12:40:26,013 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 12:40:26,013 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 897 ms
2023-04-12 12:40:26,151 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 12:40:26,163 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Starting...
2023-04-12 12:40:26,177 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Start completed.
2023-04-12 12:40:26,177 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 12:40:26,312 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 12:40:26,312 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:40:26,446 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 12:40:26,463 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueController': Unsatisfied dependency expressed through field 'leagueService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
2023-04-12 12:40:26,463 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:40:26,464 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Shutdown initiated...
2023-04-12 12:40:26,471 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Shutdown completed.
2023-04-12 12:40:26,472 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2023-04-12 12:40:26,482 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-04-12 12:40:26,488 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueController': Unsatisfied dependency expressed through field 'leagueService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:745)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:420)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1317)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at com.tomassamper.apilol.ChampLolApi21Application.main(ChampLolApi21Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 71 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 75 common frames omitted
2023-04-12 12:40:49,428 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 12:40:49,428 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 12:40:50,063 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:40:50,064 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 12:40:50,119 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:50,122 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:50,124 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:50,126 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:50,128 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:50,130 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:50,133 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:40:50,133 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 68 ms. Found 0 JDBC repository interfaces.
2023-04-12 12:40:50,137 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:40:50,137 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 12:40:50,211 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 73 ms. Found 7 JPA repository interfaces.
2023-04-12 12:40:50,325 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 12:40:50,326 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:40:50,327 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 12:40:50,327 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 12:40:50,433 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 12:40:50,433 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1002 ms
2023-04-12 12:40:50,513 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 12:40:50,526 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-4 - Starting...
2023-04-12 12:40:50,537 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-4 - Start completed.
2023-04-12 12:40:50,538 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 12:40:50,693 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 12:40:50,694 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:40:50,815 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 12:40:50,834 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueController': Unsatisfied dependency expressed through field 'leagueService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
2023-04-12 12:40:50,834 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:40:50,835 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-4 - Shutdown initiated...
2023-04-12 12:40:50,863 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-4 - Shutdown completed.
2023-04-12 12:40:50,865 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2023-04-12 12:40:50,875 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-04-12 12:40:50,882 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueController': Unsatisfied dependency expressed through field 'leagueService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:745)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:420)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1317)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at com.tomassamper.apilol.ChampLolApi21Application.main(ChampLolApi21Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 71 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 75 common frames omitted
2023-04-12 12:41:19,372 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 12:41:19,372 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 12:41:19,948 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:41:19,948 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 12:41:19,984 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:19,986 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:19,988 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:19,990 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:19,992 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:19,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:19,996 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:19,996 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
2023-04-12 12:41:20,001 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:41:20,001 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 12:41:20,074 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 72 ms. Found 7 JPA repository interfaces.
2023-04-12 12:41:20,241 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 12:41:20,242 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:41:20,243 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 12:41:20,243 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 12:41:20,334 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 12:41:20,334 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 959 ms
2023-04-12 12:41:20,452 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 12:41:20,464 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-5 - Starting...
2023-04-12 12:41:20,476 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-5 - Start completed.
2023-04-12 12:41:20,476 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 12:41:20,589 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 12:41:20,589 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:41:20,761 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 12:41:20,776 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueController': Unsatisfied dependency expressed through field 'leagueService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
2023-04-12 12:41:20,776 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:41:20,776 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-5 - Shutdown initiated...
2023-04-12 12:41:20,783 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-5 - Shutdown completed.
2023-04-12 12:41:20,784 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2023-04-12 12:41:20,794 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-04-12 12:41:20,801 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueController': Unsatisfied dependency expressed through field 'leagueService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:745)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:420)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1317)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at com.tomassamper.apilol.ChampLolApi21Application.main(ChampLolApi21Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'leagueServiceImpl': Unsatisfied dependency expressed through field 'leagueRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'leagueRepository' defined in com.tomassamper.apilol.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode(); Reason: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1054)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode()! Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 71 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract com.tomassamper.apilol.domain.League com.tomassamper.apilol.repository.LeagueRepository.findByCode() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property code unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 75 common frames omitted
2023-04-12 12:41:29,242 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 12:41:29,242 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 12:41:29,823 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:41:29,823 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 12:41:29,857 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:29,859 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:29,861 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:29,863 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:29,865 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:29,867 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:29,869 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:29,869 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
2023-04-12 12:41:29,875 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:41:29,875 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 12:41:29,968 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 93 ms. Found 7 JPA repository interfaces.
2023-04-12 12:41:30,082 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 12:41:30,084 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:41:30,084 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 12:41:30,084 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 12:41:30,237 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 12:41:30,238 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 993 ms
2023-04-12 12:41:30,327 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 12:41:30,341 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-6 - Starting...
2023-04-12 12:41:30,354 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-6 - Start completed.
2023-04-12 12:41:30,355 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 12:41:30,577 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 12:41:30,577 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:41:30,745 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 12:41:31,560 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 12:41:31,565 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@69772e13, org.springframework.security.web.context.SecurityContextPersistenceFilter@7cfd2fa8, org.springframework.security.web.header.HeaderWriterFilter@495d3220, org.springframework.web.filter.CorsFilter@3572caaa, org.springframework.security.web.authentication.logout.LogoutFilter@5017c14a, com.tomassamper.apilol.security.JwtRequestFilter@3cf2d1ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25a8ee28, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c4148f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5005dcc, org.springframework.security.web.session.SessionManagementFilter@7e27c43e, org.springframework.security.web.access.ExceptionTranslationFilter@285e3a4d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@d81cf8f]
2023-04-12 12:41:31,671 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 12:41:31,687 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 12:41:31,692 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 12:41:31,705 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.546 seconds (JVM running for 3190.761)
2023-04-12 12:41:31,730 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 12:41:45,716 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 12:41:45,822 INFO org.apache.juli.logging.DirectJDKLog [Thread-7] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:41:45,822 INFO org.apache.juli.logging.DirectJDKLog [Thread-7] Stopping service [Tomcat]
2023-04-12 12:41:45,826 WARN org.apache.juli.logging.DirectJDKLog [Thread-7] The web application [ROOT] appears to have started a thread named [HikariPool-6 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 12:41:45,827 INFO org.apache.juli.logging.DirectJDKLog [Thread-7] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 12:41:45,829 INFO org.apache.juli.logging.DirectJDKLog [Thread-7] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 12:41:45,832 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-7] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:41:45,833 INFO com.zaxxer.hikari.HikariDataSource [Thread-7] HikariPool-6 - Shutdown initiated...
2023-04-12 12:41:45,841 INFO com.zaxxer.hikari.HikariDataSource [Thread-7] HikariPool-6 - Shutdown completed.
2023-04-12 12:41:46,002 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 12:41:46,003 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 12:41:46,632 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:41:46,633 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 12:41:46,668 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:46,670 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:46,672 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:46,674 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:46,675 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:46,677 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:46,679 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:41:46,680 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 46 ms. Found 0 JDBC repository interfaces.
2023-04-12 12:41:46,684 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:41:46,684 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 12:41:46,778 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 93 ms. Found 7 JPA repository interfaces.
2023-04-12 12:41:46,905 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 12:41:46,906 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:41:46,907 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 12:41:46,907 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 12:41:47,029 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 12:41:47,030 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1019 ms
2023-04-12 12:41:47,116 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 12:41:47,128 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-7 - Starting...
2023-04-12 12:41:47,141 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-7 - Start completed.
2023-04-12 12:41:47,141 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 12:41:47,260 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 12:41:47,260 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:41:47,438 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 12:41:48,109 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 12:41:48,115 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@79cb42c7, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b0ffd93, org.springframework.security.web.header.HeaderWriterFilter@188393fe, org.springframework.web.filter.CorsFilter@7759000, org.springframework.security.web.authentication.logout.LogoutFilter@3f55818f, com.tomassamper.apilol.security.JwtRequestFilter@77280df9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19fd2235, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1de54e97, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b752c2d, org.springframework.security.web.session.SessionManagementFilter@5945f688, org.springframework.security.web.access.ExceptionTranslationFilter@1d662cd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1e6d66c4]
2023-04-12 12:41:48,235 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 12:41:48,248 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 12:41:48,272 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 12:41:48,285 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.347 seconds (JVM running for 3207.341)
2023-04-12 12:41:48,288 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 12:42:05,531 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 12:42:05,636 INFO org.apache.juli.logging.DirectJDKLog [Thread-23] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:42:05,636 INFO org.apache.juli.logging.DirectJDKLog [Thread-23] Stopping service [Tomcat]
2023-04-12 12:42:05,641 WARN org.apache.juli.logging.DirectJDKLog [Thread-23] The web application [ROOT] appears to have started a thread named [HikariPool-7 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 12:42:05,642 INFO org.apache.juli.logging.DirectJDKLog [Thread-23] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 12:42:05,644 INFO org.apache.juli.logging.DirectJDKLog [Thread-23] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 12:42:05,646 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-23] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:42:05,647 INFO com.zaxxer.hikari.HikariDataSource [Thread-23] HikariPool-7 - Shutdown initiated...
2023-04-12 12:42:05,654 INFO com.zaxxer.hikari.HikariDataSource [Thread-23] HikariPool-7 - Shutdown completed.
2023-04-12 12:42:05,885 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 12:42:05,886 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 12:42:06,445 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:42:06,446 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 12:42:06,486 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:42:06,489 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:42:06,491 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:42:06,493 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:42:06,495 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:42:06,497 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:42:06,500 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:42:06,500 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 54 ms. Found 0 JDBC repository interfaces.
2023-04-12 12:42:06,506 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:42:06,506 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 12:42:06,622 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 115 ms. Found 7 JPA repository interfaces.
2023-04-12 12:42:06,738 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 12:42:06,739 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:42:06,739 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 12:42:06,740 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 12:42:06,851 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 12:42:06,851 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 963 ms
2023-04-12 12:42:06,936 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 12:42:06,949 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-8 - Starting...
2023-04-12 12:42:06,960 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-8 - Start completed.
2023-04-12 12:42:06,961 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 12:42:07,059 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 12:42:07,059 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:42:07,219 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 12:42:07,777 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 12:42:07,781 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38c51f30, org.springframework.security.web.context.SecurityContextPersistenceFilter@57942b2d, org.springframework.security.web.header.HeaderWriterFilter@4aca220d, org.springframework.web.filter.CorsFilter@1391e3c1, org.springframework.security.web.authentication.logout.LogoutFilter@6545ee92, com.tomassamper.apilol.security.JwtRequestFilter@141eadf8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d97548c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@656c779, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1419d296, org.springframework.security.web.session.SessionManagementFilter@57f858b8, org.springframework.security.web.access.ExceptionTranslationFilter@186a446f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3d02afb3]
2023-04-12 12:42:07,897 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 12:42:07,907 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 12:42:07,911 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 12:42:07,918 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.171 seconds (JVM running for 3226.974)
2023-04-12 12:42:07,920 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 12:43:48,636 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 12:43:48,722 INFO org.apache.juli.logging.DirectJDKLog [Thread-27] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:43:48,722 INFO org.apache.juli.logging.DirectJDKLog [Thread-27] Stopping service [Tomcat]
2023-04-12 12:43:48,727 WARN org.apache.juli.logging.DirectJDKLog [Thread-27] The web application [ROOT] appears to have started a thread named [HikariPool-8 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 12:43:48,727 INFO org.apache.juli.logging.DirectJDKLog [Thread-27] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 12:43:48,729 INFO org.apache.juli.logging.DirectJDKLog [Thread-27] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 12:43:48,732 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-27] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:43:48,733 INFO com.zaxxer.hikari.HikariDataSource [Thread-27] HikariPool-8 - Shutdown initiated...
2023-04-12 12:43:48,741 INFO com.zaxxer.hikari.HikariDataSource [Thread-27] HikariPool-8 - Shutdown completed.
2023-04-12 12:43:48,906 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 12:43:48,907 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 12:43:49,450 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:43:49,450 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 12:43:49,485 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:43:49,488 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:43:49,489 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:43:49,491 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:43:49,493 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:43:49,495 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:43:49,498 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 12:43:49,498 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
2023-04-12 12:43:49,503 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 12:43:49,503 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 12:43:49,597 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 93 ms. Found 7 JPA repository interfaces.
2023-04-12 12:43:49,696 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 12:43:49,697 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 12:43:49,697 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 12:43:49,697 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 12:43:49,785 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 12:43:49,785 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 876 ms
2023-04-12 12:43:49,882 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 12:43:49,894 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-9 - Starting...
2023-04-12 12:43:49,907 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-9 - Start completed.
2023-04-12 12:43:49,907 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 12:43:50,019 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 12:43:50,019 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 12:43:50,191 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 12:43:50,775 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 12:43:50,779 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27e2c7af, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ddd37c0, org.springframework.security.web.header.HeaderWriterFilter@51edd2c7, org.springframework.web.filter.CorsFilter@3029bd3b, org.springframework.security.web.authentication.logout.LogoutFilter@3b180490, com.tomassamper.apilol.security.JwtRequestFilter@306549a1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@341b8030, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b5f179e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23ebf041, org.springframework.security.web.session.SessionManagementFilter@2c691fb8, org.springframework.security.web.access.ExceptionTranslationFilter@3f36df34, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2cfd2a55]
2023-04-12 12:43:50,891 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 12:43:50,904 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 12:43:50,908 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 12:43:50,917 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.067 seconds (JVM running for 3329.972)
2023-04-12 12:43:50,920 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 13:14:35,828 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 13:14:35,929 INFO org.apache.juli.logging.DirectJDKLog [Thread-31] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 13:14:35,930 INFO org.apache.juli.logging.DirectJDKLog [Thread-31] Stopping service [Tomcat]
2023-04-12 13:14:35,933 WARN org.apache.juli.logging.DirectJDKLog [Thread-31] The web application [ROOT] appears to have started a thread named [HikariPool-9 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 13:14:35,934 INFO org.apache.juli.logging.DirectJDKLog [Thread-31] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 13:14:35,936 INFO org.apache.juli.logging.DirectJDKLog [Thread-31] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 13:14:35,939 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-31] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 13:14:35,940 INFO com.zaxxer.hikari.HikariDataSource [Thread-31] HikariPool-9 - Shutdown initiated...
2023-04-12 13:14:35,946 INFO com.zaxxer.hikari.HikariDataSource [Thread-31] HikariPool-9 - Shutdown completed.
2023-04-12 13:14:36,103 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 13:14:36,104 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 13:14:36,731 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 13:14:36,731 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 13:14:36,773 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:14:36,776 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:14:36,778 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:14:36,780 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:14:36,781 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:14:36,783 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:14:36,785 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:14:36,785 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 53 ms. Found 0 JDBC repository interfaces.
2023-04-12 13:14:36,789 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 13:14:36,789 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 13:14:36,868 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 77 ms. Found 7 JPA repository interfaces.
2023-04-12 13:14:37,023 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 13:14:37,024 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 13:14:37,025 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 13:14:37,025 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 13:14:37,125 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 13:14:37,125 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1017 ms
2023-04-12 13:14:37,224 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 13:14:37,239 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-10 - Starting...
2023-04-12 13:14:37,256 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-10 - Start completed.
2023-04-12 13:14:37,256 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 13:14:37,372 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 13:14:37,372 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 13:14:37,521 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 13:14:38,237 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 13:14:38,244 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42fa13d4, org.springframework.security.web.context.SecurityContextPersistenceFilter@12136ea7, org.springframework.security.web.header.HeaderWriterFilter@23391706, org.springframework.web.filter.CorsFilter@19357ca0, org.springframework.security.web.authentication.logout.LogoutFilter@4d5dc3cf, com.tomassamper.apilol.security.JwtRequestFilter@4adbf53f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63b45e26, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8def471, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78b92d1c, org.springframework.security.web.session.SessionManagementFilter@76d75eec, org.springframework.security.web.access.ExceptionTranslationFilter@6f33ccb7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@37b078a8]
2023-04-12 13:14:38,352 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 13:14:38,366 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 13:14:38,369 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 13:14:38,381 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.333 seconds (JVM running for 5177.437)
2023-04-12 13:14:38,383 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 13:16:11,939 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 13:16:11,940 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 13:16:11,945 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 4 ms
2023-04-12 13:17:22,767 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 13:17:22,870 INFO org.apache.juli.logging.DirectJDKLog [Thread-35] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 13:17:22,870 INFO org.apache.juli.logging.DirectJDKLog [Thread-35] Stopping service [Tomcat]
2023-04-12 13:17:22,872 INFO org.apache.juli.logging.DirectJDKLog [Thread-35] Waiting for [1] instance(s) to be deallocated for Servlet [dispatcherServlet]
2023-04-12 13:17:22,980 INFO org.apache.juli.logging.DirectJDKLog [Thread-35] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 13:17:22,983 WARN org.apache.juli.logging.DirectJDKLog [Thread-35] The web application [ROOT] appears to have started a thread named [HikariPool-10 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 13:17:22,985 INFO org.apache.juli.logging.DirectJDKLog [Thread-35] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 13:17:22,986 INFO org.apache.juli.logging.DirectJDKLog [Thread-35] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 13:17:22,990 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-35] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 13:17:22,991 INFO com.zaxxer.hikari.HikariDataSource [Thread-35] HikariPool-10 - Shutdown initiated...
2023-04-12 13:17:22,997 INFO com.zaxxer.hikari.HikariDataSource [Thread-35] HikariPool-10 - Shutdown completed.
2023-04-12 13:17:23,150 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 13:17:23,151 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 13:17:23,668 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 13:17:23,668 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 13:17:23,703 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:17:23,705 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:17:23,707 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:17:23,709 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:17:23,711 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:17:23,714 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:17:23,716 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:17:23,716 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
2023-04-12 13:17:23,721 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 13:17:23,721 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 13:17:23,797 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 74 ms. Found 7 JPA repository interfaces.
2023-04-12 13:17:23,931 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 13:17:23,932 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 13:17:23,932 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 13:17:23,932 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 13:17:24,022 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 13:17:24,023 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 870 ms
2023-04-12 13:17:24,105 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 13:17:24,118 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-11 - Starting...
2023-04-12 13:17:24,133 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-11 - Start completed.
2023-04-12 13:17:24,134 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 13:17:24,226 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 13:17:24,227 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 13:17:24,367 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 13:17:25,019 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 13:17:25,035 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e326b2b, org.springframework.security.web.context.SecurityContextPersistenceFilter@3aeb84d6, org.springframework.security.web.header.HeaderWriterFilter@61b5c895, org.springframework.web.filter.CorsFilter@14e138f4, org.springframework.security.web.authentication.logout.LogoutFilter@5b59aa6a, com.tomassamper.apilol.security.JwtRequestFilter@dccf0fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@346163d8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7bdff4a1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4d1144d9, org.springframework.security.web.session.SessionManagementFilter@32ce84b8, org.springframework.security.web.access.ExceptionTranslationFilter@61cca7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b92093c]
2023-04-12 13:17:25,133 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 13:17:25,143 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 13:17:25,147 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 13:17:25,156 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.057 seconds (JVM running for 5344.211)
2023-04-12 13:17:25,159 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 13:17:25,295 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 13:17:25,297 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 13:17:25,299 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2023-04-12 13:22:53,850 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 13:22:53,949 INFO org.apache.juli.logging.DirectJDKLog [Thread-39] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 13:22:53,950 INFO org.apache.juli.logging.DirectJDKLog [Thread-39] Stopping service [Tomcat]
2023-04-12 13:22:53,952 INFO org.apache.juli.logging.DirectJDKLog [Thread-39] Waiting for [1] instance(s) to be deallocated for Servlet [dispatcherServlet]
2023-04-12 13:22:54,059 INFO org.apache.juli.logging.DirectJDKLog [Thread-39] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 13:22:54,064 WARN org.apache.juli.logging.DirectJDKLog [Thread-39] The web application [ROOT] appears to have started a thread named [HikariPool-11 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 13:22:54,065 INFO org.apache.juli.logging.DirectJDKLog [Thread-39] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 13:22:54,067 INFO org.apache.juli.logging.DirectJDKLog [Thread-39] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 13:22:54,070 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-39] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 13:22:54,071 INFO com.zaxxer.hikari.HikariDataSource [Thread-39] HikariPool-11 - Shutdown initiated...
2023-04-12 13:22:54,079 INFO com.zaxxer.hikari.HikariDataSource [Thread-39] HikariPool-11 - Shutdown completed.
2023-04-12 13:22:54,243 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 13:22:54,243 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 13:22:54,880 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 13:22:54,880 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 13:22:54,918 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:22:54,921 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:22:54,923 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:22:54,925 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:22:54,926 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:22:54,928 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:22:54,931 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:22:54,931 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 50 ms. Found 0 JDBC repository interfaces.
2023-04-12 13:22:54,936 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 13:22:54,936 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 13:22:55,005 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 68 ms. Found 7 JPA repository interfaces.
2023-04-12 13:22:55,106 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 13:22:55,107 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 13:22:55,107 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 13:22:55,107 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 13:22:55,194 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 13:22:55,195 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 949 ms
2023-04-12 13:22:55,272 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 13:22:55,284 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-12 - Starting...
2023-04-12 13:22:55,296 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-12 - Start completed.
2023-04-12 13:22:55,297 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 13:22:55,388 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 13:22:55,388 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 13:22:55,521 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 13:22:56,121 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 13:22:56,126 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7ec067e0, org.springframework.security.web.context.SecurityContextPersistenceFilter@adcc6aa, org.springframework.security.web.header.HeaderWriterFilter@2e3d305b, org.springframework.web.filter.CorsFilter@115a67b, org.springframework.security.web.authentication.logout.LogoutFilter@5e16e29d, com.tomassamper.apilol.security.JwtRequestFilter@50c40325, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@631d73a7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24e52877, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ade4a74, org.springframework.security.web.session.SessionManagementFilter@431abf5f, org.springframework.security.web.access.ExceptionTranslationFilter@1bce5cda, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19197cfb]
2023-04-12 13:22:56,216 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 13:22:56,228 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 13:22:56,232 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 13:22:56,240 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.049 seconds (JVM running for 5675.295)
2023-04-12 13:22:56,242 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 13:22:56,374 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 13:22:56,376 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 13:22:56,377 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2023-04-12 13:23:01,180 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 13:23:01,300 INFO org.apache.juli.logging.DirectJDKLog [Thread-43] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 13:23:01,300 INFO org.apache.juli.logging.DirectJDKLog [Thread-43] Stopping service [Tomcat]
2023-04-12 13:23:01,302 INFO org.apache.juli.logging.DirectJDKLog [Thread-43] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 13:23:01,305 WARN org.apache.juli.logging.DirectJDKLog [Thread-43] The web application [ROOT] appears to have started a thread named [HikariPool-12 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 13:23:01,306 INFO org.apache.juli.logging.DirectJDKLog [Thread-43] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 13:23:01,308 INFO org.apache.juli.logging.DirectJDKLog [Thread-43] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 13:23:01,311 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-43] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 13:23:01,312 INFO com.zaxxer.hikari.HikariDataSource [Thread-43] HikariPool-12 - Shutdown initiated...
2023-04-12 13:23:01,320 INFO com.zaxxer.hikari.HikariDataSource [Thread-43] HikariPool-12 - Shutdown completed.
2023-04-12 13:23:01,589 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 13:23:01,596 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 13:23:02,428 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 13:23:02,429 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 13:23:02,464 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:02,466 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:02,468 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:02,470 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:02,472 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:02,473 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:02,475 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:02,476 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 46 ms. Found 0 JDBC repository interfaces.
2023-04-12 13:23:02,480 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 13:23:02,480 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 13:23:02,546 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 65 ms. Found 7 JPA repository interfaces.
2023-04-12 13:23:02,647 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 13:23:02,647 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 13:23:02,648 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 13:23:02,648 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 13:23:02,738 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 13:23:02,738 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1135 ms
2023-04-12 13:23:02,818 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 13:23:02,830 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-13 - Starting...
2023-04-12 13:23:02,842 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-13 - Start completed.
2023-04-12 13:23:02,843 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 13:23:02,942 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 13:23:02,943 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 13:23:03,132 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 13:23:03,712 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 13:23:03,718 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@578d9b05, org.springframework.security.web.context.SecurityContextPersistenceFilter@faabe95, org.springframework.security.web.header.HeaderWriterFilter@264815d8, org.springframework.web.filter.CorsFilter@1bfe92de, org.springframework.security.web.authentication.logout.LogoutFilter@36d1cf28, com.tomassamper.apilol.security.JwtRequestFilter@5b1e26c5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6787f6fa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@187d907, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68f6b6fe, org.springframework.security.web.session.SessionManagementFilter@2c583cfa, org.springframework.security.web.access.ExceptionTranslationFilter@61212c86, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@291a777c]
2023-04-12 13:23:03,818 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 13:23:03,829 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 13:23:03,833 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 13:23:03,839 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.351 seconds (JVM running for 5682.895)
2023-04-12 13:23:03,841 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 13:23:08,750 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 13:23:08,837 INFO org.apache.juli.logging.DirectJDKLog [Thread-47] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 13:23:08,837 INFO org.apache.juli.logging.DirectJDKLog [Thread-47] Stopping service [Tomcat]
2023-04-12 13:23:08,841 WARN org.apache.juli.logging.DirectJDKLog [Thread-47] The web application [ROOT] appears to have started a thread named [HikariPool-13 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 13:23:08,842 INFO org.apache.juli.logging.DirectJDKLog [Thread-47] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 13:23:08,843 INFO org.apache.juli.logging.DirectJDKLog [Thread-47] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 13:23:08,846 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-47] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 13:23:08,847 INFO com.zaxxer.hikari.HikariDataSource [Thread-47] HikariPool-13 - Shutdown initiated...
2023-04-12 13:23:08,854 INFO com.zaxxer.hikari.HikariDataSource [Thread-47] HikariPool-13 - Shutdown completed.
2023-04-12 13:23:09,012 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 13:23:09,012 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 13:23:09,536 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 13:23:09,536 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 13:23:09,571 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:09,573 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:09,575 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:09,577 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:09,578 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:09,580 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:09,582 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 13:23:09,582 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 45 ms. Found 0 JDBC repository interfaces.
2023-04-12 13:23:09,587 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 13:23:09,587 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 13:23:09,656 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 69 ms. Found 7 JPA repository interfaces.
2023-04-12 13:23:09,754 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 13:23:09,754 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 13:23:09,755 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 13:23:09,755 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 13:23:09,842 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 13:23:09,842 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 827 ms
2023-04-12 13:23:09,947 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 13:23:09,970 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-14 - Starting...
2023-04-12 13:23:09,980 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-14 - Start completed.
2023-04-12 13:23:09,981 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 13:23:10,080 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 13:23:10,080 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 13:23:10,231 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 13:23:10,745 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 13:23:10,751 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@611f6f7d, org.springframework.security.web.context.SecurityContextPersistenceFilter@20cee613, org.springframework.security.web.header.HeaderWriterFilter@3636d50b, org.springframework.web.filter.CorsFilter@7b4e10f7, org.springframework.security.web.authentication.logout.LogoutFilter@607db47a, com.tomassamper.apilol.security.JwtRequestFilter@518f94d5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@583b770d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@58a56f8c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1331b314, org.springframework.security.web.session.SessionManagementFilter@329ba0ad, org.springframework.security.web.access.ExceptionTranslationFilter@3789f08f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7177981e]
2023-04-12 13:23:10,870 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 13:23:10,888 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 13:23:10,892 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 13:23:10,902 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 1.944 seconds (JVM running for 5689.958)
2023-04-12 13:23:10,905 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 13:23:18,867 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 13:23:18,869 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 13:23:18,871 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2023-04-12 16:48:49,014 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-04-12T16:48:49Z. Current time: 2023-04-12T16:48:49Z, a difference of 1 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.tomassamper.apilol.security.JwtTokenUtil.getAllClaims(JwtTokenUtil.java:30)
	at com.tomassamper.apilol.security.JwtTokenUtil.getClaimFromToken(JwtTokenUtil.java:25)
	at com.tomassamper.apilol.security.JwtTokenUtil.getUsername(JwtTokenUtil.java:34)
	at com.tomassamper.apilol.security.JwtTokenUtil.validateToken(JwtTokenUtil.java:58)
	at com.tomassamper.apilol.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2023-04-12 18:58:31,226 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 18:58:31,399 INFO org.apache.juli.logging.DirectJDKLog [Thread-51] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 18:58:31,402 INFO org.apache.juli.logging.DirectJDKLog [Thread-51] Stopping service [Tomcat]
2023-04-12 18:58:31,406 INFO org.apache.juli.logging.DirectJDKLog [Thread-51] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 18:58:31,429 WARN org.apache.juli.logging.DirectJDKLog [Thread-51] The web application [ROOT] appears to have started a thread named [HikariPool-14 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 18:58:31,432 INFO org.apache.juli.logging.DirectJDKLog [Thread-51] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 18:58:31,435 INFO org.apache.juli.logging.DirectJDKLog [Thread-51] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 18:58:31,446 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-51] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 18:58:31,455 INFO com.zaxxer.hikari.HikariDataSource [Thread-51] HikariPool-14 - Shutdown initiated...
2023-04-12 18:58:31,459 INFO com.zaxxer.hikari.HikariDataSource [Thread-51] HikariPool-14 - Shutdown completed.
2023-04-12 18:58:31,829 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 18:58:31,829 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 18:58:32,763 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 18:58:32,764 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 18:58:32,808 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 18:58:32,810 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 18:58:32,812 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 18:58:32,814 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 18:58:32,817 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 18:58:32,821 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 18:58:32,825 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 18:58:32,825 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 60 ms. Found 0 JDBC repository interfaces.
2023-04-12 18:58:32,831 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 18:58:32,831 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 18:58:32,920 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 88 ms. Found 7 JPA repository interfaces.
2023-04-12 18:58:33,135 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 18:58:33,136 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 18:58:33,136 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 18:58:33,136 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 18:58:33,251 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 18:58:33,251 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1416 ms
2023-04-12 18:58:33,377 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 18:58:33,391 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-15 - Starting...
2023-04-12 18:58:33,404 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-15 - Start completed.
2023-04-12 18:58:33,404 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 18:58:33,573 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 18:58:33,573 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 18:58:33,723 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 18:58:34,458 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 18:58:34,464 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1759e0f4, org.springframework.security.web.context.SecurityContextPersistenceFilter@4ccc2a85, org.springframework.security.web.header.HeaderWriterFilter@3117d5f8, org.springframework.web.filter.CorsFilter@198c312, org.springframework.security.web.authentication.logout.LogoutFilter@6e696580, com.tomassamper.apilol.security.JwtRequestFilter@2fbcafca, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9b2fdfa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6054121, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4162f8fc, org.springframework.security.web.session.SessionManagementFilter@90992b7, org.springframework.security.web.access.ExceptionTranslationFilter@7e577d83, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2f27c5b6]
2023-04-12 18:58:34,594 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 18:58:34,611 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 18:58:34,617 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 18:58:34,628 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.884 seconds (JVM running for 25813.684)
2023-04-12 18:58:34,631 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 19:00:10,473 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 19:00:10,600 INFO org.apache.juli.logging.DirectJDKLog [Thread-55] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:10,601 INFO org.apache.juli.logging.DirectJDKLog [Thread-55] Stopping service [Tomcat]
2023-04-12 19:00:10,604 WARN org.apache.juli.logging.DirectJDKLog [Thread-55] The web application [ROOT] appears to have started a thread named [HikariPool-15 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 19:00:10,605 INFO org.apache.juli.logging.DirectJDKLog [Thread-55] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:10,608 INFO org.apache.juli.logging.DirectJDKLog [Thread-55] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:10,613 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-55] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:00:10,614 INFO com.zaxxer.hikari.HikariDataSource [Thread-55] HikariPool-15 - Shutdown initiated...
2023-04-12 19:00:10,617 INFO com.zaxxer.hikari.HikariDataSource [Thread-55] HikariPool-15 - Shutdown completed.
2023-04-12 19:00:10,805 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 19:00:10,805 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 19:00:11,484 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:00:11,484 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 19:00:11,525 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:11,527 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:11,530 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:11,532 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:11,534 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:11,537 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:11,539 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:11,539 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 55 ms. Found 0 JDBC repository interfaces.
2023-04-12 19:00:11,544 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:00:11,544 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 19:00:11,625 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 80 ms. Found 7 JPA repository interfaces.
2023-04-12 19:00:11,749 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 19:00:11,750 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:11,750 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 19:00:11,750 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 19:00:11,858 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 19:00:11,858 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1047 ms
2023-04-12 19:00:11,959 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 19:00:11,978 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-16 - Starting...
2023-04-12 19:00:12,002 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-16 - Start completed.
2023-04-12 19:00:12,004 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 19:00:12,137 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 19:00:12,138 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:00:12,303 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 19:00:12,948 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 19:00:12,952 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@83d4cdd, org.springframework.security.web.context.SecurityContextPersistenceFilter@32e9a5a5, org.springframework.security.web.header.HeaderWriterFilter@b5db697, org.springframework.web.filter.CorsFilter@7cb53f43, org.springframework.security.web.authentication.logout.LogoutFilter@fb2a9e4, com.tomassamper.apilol.security.JwtRequestFilter@6fbb4ea2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@228009e0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@448fea29, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@250e5977, org.springframework.security.web.session.SessionManagementFilter@1304f6cb, org.springframework.security.web.access.ExceptionTranslationFilter@c239b5b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@564636f5]
2023-04-12 19:00:13,068 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 19:00:13,089 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:13,093 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 19:00:13,108 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.379 seconds (JVM running for 25912.163)
2023-04-12 19:00:13,111 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 19:00:32,689 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 19:00:32,829 INFO org.apache.juli.logging.DirectJDKLog [Thread-59] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:32,829 INFO org.apache.juli.logging.DirectJDKLog [Thread-59] Stopping service [Tomcat]
2023-04-12 19:00:32,836 WARN org.apache.juli.logging.DirectJDKLog [Thread-59] The web application [ROOT] appears to have started a thread named [HikariPool-16 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 19:00:32,837 INFO org.apache.juli.logging.DirectJDKLog [Thread-59] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:32,840 INFO org.apache.juli.logging.DirectJDKLog [Thread-59] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:32,849 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-59] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:00:32,851 INFO com.zaxxer.hikari.HikariDataSource [Thread-59] HikariPool-16 - Shutdown initiated...
2023-04-12 19:00:32,858 INFO com.zaxxer.hikari.HikariDataSource [Thread-59] HikariPool-16 - Shutdown completed.
2023-04-12 19:00:33,065 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 19:00:33,066 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 19:00:33,739 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:00:33,740 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 19:00:33,781 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:33,783 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:33,785 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:33,787 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:33,789 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:33,792 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:33,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:33,796 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 56 ms. Found 0 JDBC repository interfaces.
2023-04-12 19:00:33,801 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:00:33,801 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 19:00:33,887 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 85 ms. Found 7 JPA repository interfaces.
2023-04-12 19:00:34,026 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 19:00:34,027 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:34,027 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 19:00:34,027 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 19:00:34,146 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 19:00:34,147 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1078 ms
2023-04-12 19:00:34,238 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 19:00:34,252 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-17 - Starting...
2023-04-12 19:00:34,265 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-17 - Start completed.
2023-04-12 19:00:34,267 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 19:00:34,382 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 19:00:34,382 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:00:34,558 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 19:00:35,198 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 19:00:35,204 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70e1d769, org.springframework.security.web.context.SecurityContextPersistenceFilter@737188f9, org.springframework.security.web.header.HeaderWriterFilter@5848edbe, org.springframework.web.filter.CorsFilter@68de2459, org.springframework.security.web.authentication.logout.LogoutFilter@63024df, com.tomassamper.apilol.security.JwtRequestFilter@30b20b17, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@31335d82, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e096307, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@641a9b8d, org.springframework.security.web.session.SessionManagementFilter@4b038493, org.springframework.security.web.access.ExceptionTranslationFilter@175abb5e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@49c14182]
2023-04-12 19:00:35,345 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 19:00:35,358 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:35,361 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 19:00:35,369 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.404 seconds (JVM running for 25934.424)
2023-04-12 19:00:35,371 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 19:00:43,817 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 19:00:43,932 INFO org.apache.juli.logging.DirectJDKLog [Thread-63] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:43,932 INFO org.apache.juli.logging.DirectJDKLog [Thread-63] Stopping service [Tomcat]
2023-04-12 19:00:43,936 WARN org.apache.juli.logging.DirectJDKLog [Thread-63] The web application [ROOT] appears to have started a thread named [HikariPool-17 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 19:00:43,937 INFO org.apache.juli.logging.DirectJDKLog [Thread-63] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:43,940 INFO org.apache.juli.logging.DirectJDKLog [Thread-63] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:43,942 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-63] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:00:43,943 INFO com.zaxxer.hikari.HikariDataSource [Thread-63] HikariPool-17 - Shutdown initiated...
2023-04-12 19:00:43,947 INFO com.zaxxer.hikari.HikariDataSource [Thread-63] HikariPool-17 - Shutdown completed.
2023-04-12 19:00:44,123 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 19:00:44,123 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 19:00:44,789 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:00:44,789 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 19:00:44,831 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:44,833 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:44,837 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:44,839 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:44,841 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:44,844 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:44,846 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:00:44,846 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 57 ms. Found 0 JDBC repository interfaces.
2023-04-12 19:00:44,852 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:00:44,852 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 19:00:44,943 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 90 ms. Found 7 JPA repository interfaces.
2023-04-12 19:00:45,088 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 19:00:45,090 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:45,090 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 19:00:45,090 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 19:00:45,197 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 19:00:45,197 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1070 ms
2023-04-12 19:00:45,293 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 19:00:45,309 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-18 - Starting...
2023-04-12 19:00:45,325 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-18 - Start completed.
2023-04-12 19:00:45,326 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 19:00:45,458 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 19:00:45,458 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:00:45,640 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 19:00:46,391 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 19:00:46,396 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62bb9cfb, org.springframework.security.web.context.SecurityContextPersistenceFilter@66476c66, org.springframework.security.web.header.HeaderWriterFilter@158afb54, org.springframework.web.filter.CorsFilter@42ba8c96, org.springframework.security.web.authentication.logout.LogoutFilter@5ac516b1, com.tomassamper.apilol.security.JwtRequestFilter@fa9aa83, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b403133, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29523754, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4995af1c, org.springframework.security.web.session.SessionManagementFilter@d247c9e, org.springframework.security.web.access.ExceptionTranslationFilter@e507b56, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@27ab1e11]
2023-04-12 19:00:46,508 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 19:00:46,521 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 19:00:46,525 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 19:00:46,533 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.472 seconds (JVM running for 25945.589)
2023-04-12 19:00:46,536 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 19:02:39,506 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 19:02:39,673 INFO org.apache.juli.logging.DirectJDKLog [Thread-67] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:02:39,673 INFO org.apache.juli.logging.DirectJDKLog [Thread-67] Stopping service [Tomcat]
2023-04-12 19:02:39,677 WARN org.apache.juli.logging.DirectJDKLog [Thread-67] The web application [ROOT] appears to have started a thread named [HikariPool-18 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 19:02:39,678 INFO org.apache.juli.logging.DirectJDKLog [Thread-67] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 19:02:39,679 INFO org.apache.juli.logging.DirectJDKLog [Thread-67] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 19:02:39,682 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-67] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:02:39,683 INFO com.zaxxer.hikari.HikariDataSource [Thread-67] HikariPool-18 - Shutdown initiated...
2023-04-12 19:02:39,690 INFO com.zaxxer.hikari.HikariDataSource [Thread-67] HikariPool-18 - Shutdown completed.
2023-04-12 19:02:39,867 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 19:02:39,867 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 19:02:40,519 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:02:40,519 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 19:02:40,564 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:02:40,568 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:02:40,571 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:02:40,574 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:02:40,576 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:02:40,578 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:02:40,582 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:02:40,582 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 62 ms. Found 0 JDBC repository interfaces.
2023-04-12 19:02:40,591 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:02:40,591 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 19:02:40,678 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 86 ms. Found 7 JPA repository interfaces.
2023-04-12 19:02:40,838 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 19:02:40,839 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:02:40,839 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 19:02:40,839 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 19:02:40,979 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 19:02:40,980 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1110 ms
2023-04-12 19:02:41,083 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 19:02:41,097 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-19 - Starting...
2023-04-12 19:02:41,112 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-19 - Start completed.
2023-04-12 19:02:41,113 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 19:02:41,255 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 19:02:41,255 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:02:41,391 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 19:02:42,181 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 19:02:42,187 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23ffff95, org.springframework.security.web.context.SecurityContextPersistenceFilter@25ce18bc, org.springframework.security.web.header.HeaderWriterFilter@67dd72d6, org.springframework.web.filter.CorsFilter@5f0dc3f8, org.springframework.security.web.authentication.logout.LogoutFilter@440c4478, com.tomassamper.apilol.security.JwtRequestFilter@1eb8fcdf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ff975b7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43bef55c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e8b8d44, org.springframework.security.web.session.SessionManagementFilter@17c8aecb, org.springframework.security.web.access.ExceptionTranslationFilter@22790486, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5944bf21]
2023-04-12 19:02:42,291 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 19:02:42,305 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 19:02:42,309 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 19:02:42,319 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.517 seconds (JVM running for 26061.375)
2023-04-12 19:02:42,321 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 19:03:14,382 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 19:03:14,507 INFO org.apache.juli.logging.DirectJDKLog [Thread-71] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:03:14,507 INFO org.apache.juli.logging.DirectJDKLog [Thread-71] Stopping service [Tomcat]
2023-04-12 19:03:14,512 WARN org.apache.juli.logging.DirectJDKLog [Thread-71] The web application [ROOT] appears to have started a thread named [HikariPool-19 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 19:03:14,512 INFO org.apache.juli.logging.DirectJDKLog [Thread-71] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 19:03:14,514 INFO org.apache.juli.logging.DirectJDKLog [Thread-71] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 19:03:14,517 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-71] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:03:14,518 INFO com.zaxxer.hikari.HikariDataSource [Thread-71] HikariPool-19 - Shutdown initiated...
2023-04-12 19:03:14,521 INFO com.zaxxer.hikari.HikariDataSource [Thread-71] HikariPool-19 - Shutdown completed.
2023-04-12 19:03:14,701 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 19:03:14,701 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 19:03:15,346 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:03:15,347 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 19:03:15,388 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:03:15,390 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:03:15,392 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:03:15,394 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:03:15,396 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:03:15,400 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:03:15,403 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:03:15,403 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 55 ms. Found 0 JDBC repository interfaces.
2023-04-12 19:03:15,408 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:03:15,408 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 19:03:15,491 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 82 ms. Found 7 JPA repository interfaces.
2023-04-12 19:03:15,640 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 19:03:15,641 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:03:15,642 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 19:03:15,642 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 19:03:15,767 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 19:03:15,767 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1062 ms
2023-04-12 19:03:15,867 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 19:03:15,881 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-20 - Starting...
2023-04-12 19:03:15,893 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-20 - Start completed.
2023-04-12 19:03:15,894 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 19:03:16,013 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 19:03:16,014 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:03:16,187 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 19:03:16,914 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 19:03:16,921 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5821ad49, org.springframework.security.web.context.SecurityContextPersistenceFilter@44f13f69, org.springframework.security.web.header.HeaderWriterFilter@4fceb64, org.springframework.web.filter.CorsFilter@1bf5c99b, org.springframework.security.web.authentication.logout.LogoutFilter@1d9e5ce4, com.tomassamper.apilol.security.JwtRequestFilter@53a0b90e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1350f876, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@701486b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10c9bc9e, org.springframework.security.web.session.SessionManagementFilter@4d9dae1e, org.springframework.security.web.access.ExceptionTranslationFilter@2cbf7938, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2cbb3357]
2023-04-12 19:03:17,054 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 19:03:17,069 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 19:03:17,074 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 19:03:17,082 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.442 seconds (JVM running for 26096.138)
2023-04-12 19:03:17,086 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 19:15:06,786 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 19:15:06,937 INFO org.apache.juli.logging.DirectJDKLog [Thread-75] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:15:06,937 INFO org.apache.juli.logging.DirectJDKLog [Thread-75] Stopping service [Tomcat]
2023-04-12 19:15:06,943 WARN org.apache.juli.logging.DirectJDKLog [Thread-75] The web application [ROOT] appears to have started a thread named [HikariPool-20 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 19:15:06,944 INFO org.apache.juli.logging.DirectJDKLog [Thread-75] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 19:15:06,946 INFO org.apache.juli.logging.DirectJDKLog [Thread-75] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 19:15:06,949 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-75] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:15:06,950 INFO com.zaxxer.hikari.HikariDataSource [Thread-75] HikariPool-20 - Shutdown initiated...
2023-04-12 19:15:06,956 INFO com.zaxxer.hikari.HikariDataSource [Thread-75] HikariPool-20 - Shutdown completed.
2023-04-12 19:15:07,189 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 19:15:07,190 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 19:15:07,901 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:15:07,901 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 19:15:07,942 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:15:07,944 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:15:07,946 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:15:07,948 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:15:07,950 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:15:07,955 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:15:07,958 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:15:07,958 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 57 ms. Found 0 JDBC repository interfaces.
2023-04-12 19:15:07,965 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:15:07,965 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 19:15:08,055 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 89 ms. Found 7 JPA repository interfaces.
2023-04-12 19:15:08,186 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 19:15:08,187 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:15:08,187 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 19:15:08,187 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 19:15:08,292 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 19:15:08,292 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1098 ms
2023-04-12 19:15:08,386 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 19:15:08,399 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-21 - Starting...
2023-04-12 19:15:08,411 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-21 - Start completed.
2023-04-12 19:15:08,412 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 19:15:08,527 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 19:15:08,528 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:15:08,690 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 19:15:09,392 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 19:15:09,397 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12568ccf, org.springframework.security.web.context.SecurityContextPersistenceFilter@5682b514, org.springframework.security.web.header.HeaderWriterFilter@4bf692f7, org.springframework.web.filter.CorsFilter@4f36ffe4, org.springframework.security.web.authentication.logout.LogoutFilter@7ff70d6b, com.tomassamper.apilol.security.JwtRequestFilter@3a7eee60, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6644b0eb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@195af7fe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a4b8735, org.springframework.security.web.session.SessionManagementFilter@2fe1400c, org.springframework.security.web.access.ExceptionTranslationFilter@72b849d6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b9e109a]
2023-04-12 19:15:09,510 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 19:15:09,523 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 19:15:09,527 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 19:15:09,535 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.444 seconds (JVM running for 26808.59)
2023-04-12 19:15:09,538 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 19:19:27,170 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 19:19:27,171 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 19:19:27,174 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2023-04-12 19:19:27,181 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-2] El token ha expirado
2023-04-12 19:19:27,195 ERROR com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-4] El token ha expirado
2023-04-12 19:19:34,741 WARN com.tomassamper.apilol.security.JwtRequestFilter [http-nio-8080-exec-6] El token no viene con Bearer delante
2023-04-12 19:19:34,744 INFO com.tomassamper.apilol.controller.UserController [http-nio-8080-exec-6] Inicio sesion
2023-04-12 19:20:16,639 INFO com.tomassamper.apilol.controller.LeagueController [http-nio-8080-exec-7] El usuario ya se encuentra en la liga
2023-04-12 19:39:30,613 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 19:39:30,713 INFO org.apache.juli.logging.DirectJDKLog [Thread-79] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:39:30,714 INFO org.apache.juli.logging.DirectJDKLog [Thread-79] Stopping service [Tomcat]
2023-04-12 19:39:30,715 INFO org.apache.juli.logging.DirectJDKLog [Thread-79] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 19:39:30,719 WARN org.apache.juli.logging.DirectJDKLog [Thread-79] The web application [ROOT] appears to have started a thread named [HikariPool-21 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 19:39:30,720 INFO org.apache.juli.logging.DirectJDKLog [Thread-79] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 19:39:30,721 INFO org.apache.juli.logging.DirectJDKLog [Thread-79] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 19:39:30,724 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-79] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:39:30,725 INFO com.zaxxer.hikari.HikariDataSource [Thread-79] HikariPool-21 - Shutdown initiated...
2023-04-12 19:39:30,729 INFO com.zaxxer.hikari.HikariDataSource [Thread-79] HikariPool-21 - Shutdown completed.
2023-04-12 19:39:30,910 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 19:39:30,911 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 19:39:31,635 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:39:31,635 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 19:39:31,674 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:39:31,677 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:39:31,679 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:39:31,681 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:39:31,683 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:39:31,685 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:39:31,687 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:39:31,687 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 51 ms. Found 0 JDBC repository interfaces.
2023-04-12 19:39:31,692 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:39:31,693 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 19:39:31,766 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 72 ms. Found 7 JPA repository interfaces.
2023-04-12 19:39:31,875 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 19:39:31,875 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:39:31,875 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 19:39:31,875 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 19:39:31,972 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 19:39:31,973 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1059 ms
2023-04-12 19:39:32,068 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 19:39:32,082 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-22 - Starting...
2023-04-12 19:39:32,096 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-22 - Start completed.
2023-04-12 19:39:32,097 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 19:39:32,256 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 19:39:32,256 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:39:32,410 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 19:39:33,002 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 19:39:33,010 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a377613, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b899a07, org.springframework.security.web.header.HeaderWriterFilter@63be44e6, org.springframework.web.filter.CorsFilter@636ad8e, org.springframework.security.web.authentication.logout.LogoutFilter@3cfa9dc5, com.tomassamper.apilol.security.JwtRequestFilter@17aa4bd8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13bbfba7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2330442, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4661b231, org.springframework.security.web.session.SessionManagementFilter@79540f4b, org.springframework.security.web.access.ExceptionTranslationFilter@603b163f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@58c31524]
2023-04-12 19:39:33,116 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 19:39:33,137 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 19:39:33,141 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 19:39:33,150 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.304 seconds (JVM running for 28272.206)
2023-04-12 19:39:33,152 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 19:40:05,843 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 19:40:05,940 INFO org.apache.juli.logging.DirectJDKLog [Thread-83] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:40:05,940 INFO org.apache.juli.logging.DirectJDKLog [Thread-83] Stopping service [Tomcat]
2023-04-12 19:40:05,945 WARN org.apache.juli.logging.DirectJDKLog [Thread-83] The web application [ROOT] appears to have started a thread named [HikariPool-22 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 19:40:05,946 INFO org.apache.juli.logging.DirectJDKLog [Thread-83] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 19:40:05,947 INFO org.apache.juli.logging.DirectJDKLog [Thread-83] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 19:40:05,950 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-83] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:40:05,951 INFO com.zaxxer.hikari.HikariDataSource [Thread-83] HikariPool-22 - Shutdown initiated...
2023-04-12 19:40:05,954 INFO com.zaxxer.hikari.HikariDataSource [Thread-83] HikariPool-22 - Shutdown completed.
2023-04-12 19:40:06,133 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 19:40:06,133 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 19:40:06,722 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:40:06,723 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 19:40:06,758 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:40:06,760 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:40:06,762 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:40:06,764 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:40:06,766 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:40:06,768 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:40:06,770 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:40:06,770 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
2023-04-12 19:40:06,775 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:40:06,775 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 19:40:06,845 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 70 ms. Found 7 JPA repository interfaces.
2023-04-12 19:40:06,949 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 19:40:06,950 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:40:06,951 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 19:40:06,951 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 19:40:07,045 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 19:40:07,045 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 909 ms
2023-04-12 19:40:07,122 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 19:40:07,134 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-23 - Starting...
2023-04-12 19:40:07,146 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-23 - Start completed.
2023-04-12 19:40:07,147 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 19:40:07,252 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 19:40:07,253 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:40:07,425 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 19:40:08,033 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 19:40:08,039 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@69690c1a, org.springframework.security.web.context.SecurityContextPersistenceFilter@16a47d39, org.springframework.security.web.header.HeaderWriterFilter@48542a3e, org.springframework.web.filter.CorsFilter@6cf5b727, org.springframework.security.web.authentication.logout.LogoutFilter@36e72413, com.tomassamper.apilol.security.JwtRequestFilter@42c0681c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7905cd0b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10e91dcf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e6ca82c, org.springframework.security.web.session.SessionManagementFilter@18d17698, org.springframework.security.web.access.ExceptionTranslationFilter@1aaebc0a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@48f9a597]
2023-04-12 19:40:08,157 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 19:40:08,172 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 19:40:08,175 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 19:40:08,183 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.109 seconds (JVM running for 28307.238)
2023-04-12 19:40:08,185 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 19:42:08,706 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 19:42:08,707 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 19:42:08,711 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 4 ms
2023-04-12 19:56:48,418 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-6] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.tomassamper.apilol.domain.League> com.tomassamper.apilol.controller.LeagueController.getLeague(java.lang.String)]
2023-04-12 19:59:12,470 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 19:59:12,558 INFO org.apache.juli.logging.DirectJDKLog [Thread-87] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:59:12,558 INFO org.apache.juli.logging.DirectJDKLog [Thread-87] Stopping service [Tomcat]
2023-04-12 19:59:12,559 INFO org.apache.juli.logging.DirectJDKLog [Thread-87] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 19:59:12,563 WARN org.apache.juli.logging.DirectJDKLog [Thread-87] The web application [ROOT] appears to have started a thread named [HikariPool-23 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 19:59:12,564 INFO org.apache.juli.logging.DirectJDKLog [Thread-87] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 19:59:12,566 INFO org.apache.juli.logging.DirectJDKLog [Thread-87] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 19:59:12,569 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-87] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:59:12,572 INFO com.zaxxer.hikari.HikariDataSource [Thread-87] HikariPool-23 - Shutdown initiated...
2023-04-12 19:59:12,576 INFO com.zaxxer.hikari.HikariDataSource [Thread-87] HikariPool-23 - Shutdown completed.
2023-04-12 19:59:12,752 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 19:59:12,752 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 19:59:13,356 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:59:13,356 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 19:59:13,410 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:59:13,413 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:59:13,416 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:59:13,419 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:59:13,421 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:59:13,423 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:59:13,425 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 19:59:13,426 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 69 ms. Found 0 JDBC repository interfaces.
2023-04-12 19:59:13,432 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 19:59:13,432 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 19:59:13,503 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 70 ms. Found 7 JPA repository interfaces.
2023-04-12 19:59:13,611 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 19:59:13,612 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 19:59:13,612 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 19:59:13,612 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 19:59:13,704 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 19:59:13,705 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 950 ms
2023-04-12 19:59:13,780 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 19:59:13,792 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-24 - Starting...
2023-04-12 19:59:13,803 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-24 - Start completed.
2023-04-12 19:59:13,804 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 19:59:13,897 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 19:59:13,898 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 19:59:14,040 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 19:59:14,681 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 19:59:14,686 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c807a90, org.springframework.security.web.context.SecurityContextPersistenceFilter@71a75b93, org.springframework.security.web.header.HeaderWriterFilter@5f74f95e, org.springframework.web.filter.CorsFilter@4853bac6, org.springframework.security.web.authentication.logout.LogoutFilter@1a39845a, com.tomassamper.apilol.security.JwtRequestFilter@2f31bb83, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43d4dddc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3b1262f1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@27bec390, org.springframework.security.web.session.SessionManagementFilter@4565e29a, org.springframework.security.web.access.ExceptionTranslationFilter@70884922, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@55b2c0d4]
2023-04-12 19:59:14,785 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 19:59:14,797 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 19:59:14,801 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 19:59:14,809 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.111 seconds (JVM running for 29453.864)
2023-04-12 19:59:14,811 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 19:59:57,397 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 19:59:57,399 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 19:59:57,400 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2023-04-12 19:59:57,459 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [http-nio-8080-exec-2] Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:552)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:442)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:209)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.tomassamper.apilol.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2023-04-12 19:59:57,462 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"])] with root cause
java.lang.StackOverflowError: null
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:789)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
2023-04-12 20:01:00,859 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 20:01:00,962 INFO org.apache.juli.logging.DirectJDKLog [Thread-91] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:01:00,962 INFO org.apache.juli.logging.DirectJDKLog [Thread-91] Stopping service [Tomcat]
2023-04-12 20:01:00,965 INFO org.apache.juli.logging.DirectJDKLog [Thread-91] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 20:01:00,971 WARN org.apache.juli.logging.DirectJDKLog [Thread-91] The web application [ROOT] appears to have started a thread named [HikariPool-24 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:01:00,973 INFO org.apache.juli.logging.DirectJDKLog [Thread-91] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 20:01:00,975 INFO org.apache.juli.logging.DirectJDKLog [Thread-91] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 20:01:00,978 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-91] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:01:00,979 INFO com.zaxxer.hikari.HikariDataSource [Thread-91] HikariPool-24 - Shutdown initiated...
2023-04-12 20:01:00,983 INFO com.zaxxer.hikari.HikariDataSource [Thread-91] HikariPool-24 - Shutdown completed.
2023-04-12 20:01:01,179 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 20:01:01,180 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 20:01:01,747 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:01:01,748 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 20:01:01,788 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:01,790 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:01,792 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:01,794 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:01,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:01,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:01,800 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:01,800 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 52 ms. Found 0 JDBC repository interfaces.
2023-04-12 20:01:01,805 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:01:01,805 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 20:01:01,875 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 69 ms. Found 7 JPA repository interfaces.
2023-04-12 20:01:01,977 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 20:01:01,979 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:01:01,979 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 20:01:01,979 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 20:01:02,069 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 20:01:02,069 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 886 ms
2023-04-12 20:01:02,141 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 20:01:02,153 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-25 - Starting...
2023-04-12 20:01:02,165 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-25 - Start completed.
2023-04-12 20:01:02,166 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 20:01:02,258 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 20:01:02,258 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:01:02,414 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 20:01:03,008 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 20:01:03,013 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@667b8ca7, org.springframework.security.web.context.SecurityContextPersistenceFilter@bed3e30, org.springframework.security.web.header.HeaderWriterFilter@5cc1f52d, org.springframework.web.filter.CorsFilter@37a1962, org.springframework.security.web.authentication.logout.LogoutFilter@2269fe0, com.tomassamper.apilol.security.JwtRequestFilter@67f008f0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21be04d4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7205f553, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6128bbd2, org.springframework.security.web.session.SessionManagementFilter@12200df3, org.springframework.security.web.access.ExceptionTranslationFilter@76ab8a4b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f004c47]
2023-04-12 20:01:03,111 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 20:01:03,122 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 20:01:03,125 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 20:01:03,133 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.01 seconds (JVM running for 29562.188)
2023-04-12 20:01:03,134 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 20:01:10,268 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 20:01:10,356 INFO org.apache.juli.logging.DirectJDKLog [Thread-95] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:01:10,356 INFO org.apache.juli.logging.DirectJDKLog [Thread-95] Stopping service [Tomcat]
2023-04-12 20:01:10,361 WARN org.apache.juli.logging.DirectJDKLog [Thread-95] The web application [ROOT] appears to have started a thread named [HikariPool-25 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:01:10,361 INFO org.apache.juli.logging.DirectJDKLog [Thread-95] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 20:01:10,363 INFO org.apache.juli.logging.DirectJDKLog [Thread-95] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 20:01:10,365 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-95] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:01:10,366 INFO com.zaxxer.hikari.HikariDataSource [Thread-95] HikariPool-25 - Shutdown initiated...
2023-04-12 20:01:10,369 INFO com.zaxxer.hikari.HikariDataSource [Thread-95] HikariPool-25 - Shutdown completed.
2023-04-12 20:01:10,538 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 20:01:10,538 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 20:01:11,067 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:01:11,068 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 20:01:11,105 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:11,107 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:11,110 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:11,112 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:11,114 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:11,115 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:11,118 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:01:11,118 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 49 ms. Found 0 JDBC repository interfaces.
2023-04-12 20:01:11,122 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:01:11,122 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 20:01:11,192 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 69 ms. Found 7 JPA repository interfaces.
2023-04-12 20:01:11,299 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 20:01:11,300 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:01:11,300 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 20:01:11,300 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 20:01:11,394 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 20:01:11,394 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 853 ms
2023-04-12 20:01:11,472 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 20:01:11,484 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-26 - Starting...
2023-04-12 20:01:11,495 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-26 - Start completed.
2023-04-12 20:01:11,496 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 20:01:11,589 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 20:01:11,590 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:01:11,731 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 20:01:12,283 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 20:01:12,290 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2883c2de, org.springframework.security.web.context.SecurityContextPersistenceFilter@19e3042e, org.springframework.security.web.header.HeaderWriterFilter@547245, org.springframework.web.filter.CorsFilter@3b72a490, org.springframework.security.web.authentication.logout.LogoutFilter@1979365, com.tomassamper.apilol.security.JwtRequestFilter@24215e50, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@553944b4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@76dcc20c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ea82ed2, org.springframework.security.web.session.SessionManagementFilter@5b85bf65, org.springframework.security.web.access.ExceptionTranslationFilter@227ddd63, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3225e5a7]
2023-04-12 20:01:12,410 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 20:01:12,421 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 20:01:12,424 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 20:01:12,432 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 1.947 seconds (JVM running for 29571.488)
2023-04-12 20:01:12,434 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 20:01:34,349 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 20:01:34,351 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 20:01:34,354 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 3 ms
2023-04-12 20:01:34,436 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [http-nio-8080-exec-1] Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:552)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:442)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:209)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.tomassamper.apilol.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:01:34,439 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["lastLogin"])] with root cause
java.lang.StackOverflowError: null
	at java.base/java.math.BigDecimal.subtract(BigDecimal.java:1466)
	at java.base/java.time.format.DateTimeFormatterBuilder$FractionPrinterParser.convertToFraction(DateTimeFormatterBuilder.java:3234)
	at java.base/java.time.format.DateTimeFormatterBuilder$FractionPrinterParser.format(DateTimeFormatterBuilder.java:3151)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2341)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2341)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2341)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2341)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1843)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1817)
	at java.base/java.time.LocalDateTime.format(LocalDateTime.java:1752)
	at com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer.serialize(LocalDateTimeSerializer.java:77)
	at com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer.serialize(LocalDateTimeSerializer.java:37)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2023-04-12 20:01:34,441 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [http-nio-8080-exec-4] Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:552)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:442)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:209)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.tomassamper.apilol.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:01:34,451 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["lastLogin"])] with root cause
java.lang.StackOverflowError: null
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:720)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$NumberPrinterParser.format(DateTimeFormatterBuilder.java:2702)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2341)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2341)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1843)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1817)
	at java.base/java.time.LocalDateTime.format(LocalDateTime.java:1752)
	at com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer.serialize(LocalDateTimeSerializer.java:77)
	at com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer.serialize(LocalDateTimeSerializer.java:37)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
2023-04-12 20:03:45,193 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 20:03:45,280 INFO org.apache.juli.logging.DirectJDKLog [Thread-99] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:03:45,280 INFO org.apache.juli.logging.DirectJDKLog [Thread-99] Stopping service [Tomcat]
2023-04-12 20:03:45,281 INFO org.apache.juli.logging.DirectJDKLog [Thread-99] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 20:03:45,285 WARN org.apache.juli.logging.DirectJDKLog [Thread-99] The web application [ROOT] appears to have started a thread named [HikariPool-26 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:03:45,285 INFO org.apache.juli.logging.DirectJDKLog [Thread-99] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 20:03:45,287 INFO org.apache.juli.logging.DirectJDKLog [Thread-99] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 20:03:45,291 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-99] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:03:45,292 INFO com.zaxxer.hikari.HikariDataSource [Thread-99] HikariPool-26 - Shutdown initiated...
2023-04-12 20:03:45,297 INFO com.zaxxer.hikari.HikariDataSource [Thread-99] HikariPool-26 - Shutdown completed.
2023-04-12 20:03:45,503 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 20:03:45,504 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 20:03:46,069 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:03:46,069 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 20:03:46,106 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:03:46,108 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:03:46,110 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:03:46,112 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:03:46,114 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:03:46,116 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:03:46,118 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:03:46,118 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 48 ms. Found 0 JDBC repository interfaces.
2023-04-12 20:03:46,122 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:03:46,122 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 20:03:46,194 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 71 ms. Found 7 JPA repository interfaces.
2023-04-12 20:03:46,289 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 20:03:46,290 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:03:46,290 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 20:03:46,290 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 20:03:46,384 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 20:03:46,384 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 878 ms
2023-04-12 20:03:46,457 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 20:03:46,468 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-27 - Starting...
2023-04-12 20:03:46,479 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-27 - Start completed.
2023-04-12 20:03:46,480 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 20:03:46,566 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 20:03:46,566 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:03:46,700 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 20:03:47,325 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 20:03:47,333 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32c7fdf5, org.springframework.security.web.context.SecurityContextPersistenceFilter@63c50d7c, org.springframework.security.web.header.HeaderWriterFilter@dc6348f, org.springframework.web.filter.CorsFilter@678794b1, org.springframework.security.web.authentication.logout.LogoutFilter@b4fbee8, com.tomassamper.apilol.security.JwtRequestFilter@7bc554c9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b172f71, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57c91cd0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b24d1f8, org.springframework.security.web.session.SessionManagementFilter@474a07d2, org.springframework.security.web.access.ExceptionTranslationFilter@5bba7c01, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@33eeb05f]
2023-04-12 20:03:47,449 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 20:03:47,460 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 20:03:47,464 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 20:03:47,472 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.02 seconds (JVM running for 29726.527)
2023-04-12 20:03:47,473 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 20:03:58,489 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 20:03:58,491 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 20:03:58,494 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 3 ms
2023-04-12 20:04:38,351 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 20:04:38,440 INFO org.apache.juli.logging.DirectJDKLog [Thread-103] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:04:38,441 INFO org.apache.juli.logging.DirectJDKLog [Thread-103] Stopping service [Tomcat]
2023-04-12 20:04:38,443 INFO org.apache.juli.logging.DirectJDKLog [Thread-103] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 20:04:38,447 WARN org.apache.juli.logging.DirectJDKLog [Thread-103] The web application [ROOT] appears to have started a thread named [HikariPool-27 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:04:38,447 INFO org.apache.juli.logging.DirectJDKLog [Thread-103] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 20:04:38,449 INFO org.apache.juli.logging.DirectJDKLog [Thread-103] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 20:04:38,451 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-103] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:04:38,452 INFO com.zaxxer.hikari.HikariDataSource [Thread-103] HikariPool-27 - Shutdown initiated...
2023-04-12 20:04:38,456 INFO com.zaxxer.hikari.HikariDataSource [Thread-103] HikariPool-27 - Shutdown completed.
2023-04-12 20:04:38,656 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 20:04:38,656 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 20:04:39,390 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:04:39,390 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 20:04:39,429 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:39,432 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:39,434 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:39,436 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:39,438 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:39,440 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:39,443 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:39,443 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 53 ms. Found 0 JDBC repository interfaces.
2023-04-12 20:04:39,448 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:04:39,449 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 20:04:39,528 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 78 ms. Found 7 JPA repository interfaces.
2023-04-12 20:04:39,641 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 20:04:39,642 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:04:39,642 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 20:04:39,642 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 20:04:39,738 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 20:04:39,739 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1080 ms
2023-04-12 20:04:39,820 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 20:04:39,832 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-28 - Starting...
2023-04-12 20:04:39,843 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-28 - Start completed.
2023-04-12 20:04:39,844 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 20:04:39,945 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 20:04:39,945 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:04:40,121 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 20:04:40,750 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 20:04:40,758 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52c5647c, org.springframework.security.web.context.SecurityContextPersistenceFilter@7f7678b0, org.springframework.security.web.header.HeaderWriterFilter@3fa1af1f, org.springframework.web.filter.CorsFilter@63b6bede, org.springframework.security.web.authentication.logout.LogoutFilter@419abbf9, com.tomassamper.apilol.security.JwtRequestFilter@5df7fd1a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59db4901, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b30dc72, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@73996b87, org.springframework.security.web.session.SessionManagementFilter@382bc31a, org.springframework.security.web.access.ExceptionTranslationFilter@52475fa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4f7ffb87]
2023-04-12 20:04:40,881 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 20:04:40,892 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 20:04:40,899 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 20:04:40,908 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.305 seconds (JVM running for 29779.963)
2023-04-12 20:04:40,910 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 20:04:48,061 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 20:04:48,151 INFO org.apache.juli.logging.DirectJDKLog [Thread-107] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:04:48,151 INFO org.apache.juli.logging.DirectJDKLog [Thread-107] Stopping service [Tomcat]
2023-04-12 20:04:48,156 WARN org.apache.juli.logging.DirectJDKLog [Thread-107] The web application [ROOT] appears to have started a thread named [HikariPool-28 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:04:48,157 INFO org.apache.juli.logging.DirectJDKLog [Thread-107] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 20:04:48,158 INFO org.apache.juli.logging.DirectJDKLog [Thread-107] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 20:04:48,161 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-107] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:04:48,162 INFO com.zaxxer.hikari.HikariDataSource [Thread-107] HikariPool-28 - Shutdown initiated...
2023-04-12 20:04:48,165 INFO com.zaxxer.hikari.HikariDataSource [Thread-107] HikariPool-28 - Shutdown completed.
2023-04-12 20:04:48,360 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 20:04:48,361 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 20:04:48,905 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:04:48,905 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 20:04:48,941 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:48,943 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:48,945 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:48,947 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:48,949 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:48,951 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:48,953 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:04:48,953 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
2023-04-12 20:04:48,958 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:04:48,958 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 20:04:49,028 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 69 ms. Found 7 JPA repository interfaces.
2023-04-12 20:04:49,135 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 20:04:49,136 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:04:49,137 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 20:04:49,137 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 20:04:49,244 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 20:04:49,244 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 880 ms
2023-04-12 20:04:49,340 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 20:04:49,352 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-29 - Starting...
2023-04-12 20:04:49,362 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-29 - Start completed.
2023-04-12 20:04:49,362 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 20:04:49,459 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 20:04:49,459 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:04:49,620 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 20:04:50,211 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 20:04:50,215 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e4d40eb, org.springframework.security.web.context.SecurityContextPersistenceFilter@8e22015, org.springframework.security.web.header.HeaderWriterFilter@72346826, org.springframework.web.filter.CorsFilter@3074c554, org.springframework.security.web.authentication.logout.LogoutFilter@5f02de8b, com.tomassamper.apilol.security.JwtRequestFilter@554494f2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6707df59, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3623fec7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a4b0cf6, org.springframework.security.web.session.SessionManagementFilter@e5fceb4, org.springframework.security.web.access.ExceptionTranslationFilter@152f44b4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7402df6f]
2023-04-12 20:04:50,333 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 20:04:50,348 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 20:04:50,352 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 20:04:50,360 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.055 seconds (JVM running for 29789.415)
2023-04-12 20:04:50,362 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 20:04:55,125 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 20:04:55,127 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 20:04:55,130 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 3 ms
2023-04-12 20:05:08,583 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 20:05:08,670 INFO org.apache.juli.logging.DirectJDKLog [Thread-111] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:05:08,670 INFO org.apache.juli.logging.DirectJDKLog [Thread-111] Stopping service [Tomcat]
2023-04-12 20:05:08,671 INFO org.apache.juli.logging.DirectJDKLog [Thread-111] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 20:05:08,675 WARN org.apache.juli.logging.DirectJDKLog [Thread-111] The web application [ROOT] appears to have started a thread named [HikariPool-29 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:05:08,675 INFO org.apache.juli.logging.DirectJDKLog [Thread-111] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 20:05:08,677 INFO org.apache.juli.logging.DirectJDKLog [Thread-111] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 20:05:08,680 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-111] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:05:08,680 INFO com.zaxxer.hikari.HikariDataSource [Thread-111] HikariPool-29 - Shutdown initiated...
2023-04-12 20:05:08,684 INFO com.zaxxer.hikari.HikariDataSource [Thread-111] HikariPool-29 - Shutdown completed.
2023-04-12 20:05:08,870 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 20:05:08,870 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 20:05:09,436 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:05:09,436 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 20:05:09,473 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:09,475 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:09,477 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:09,479 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:09,481 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:09,483 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:09,485 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:09,485 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 48 ms. Found 0 JDBC repository interfaces.
2023-04-12 20:05:09,491 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:05:09,491 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 20:05:09,561 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 69 ms. Found 7 JPA repository interfaces.
2023-04-12 20:05:09,673 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 20:05:09,674 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:05:09,675 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 20:05:09,675 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 20:05:09,767 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 20:05:09,767 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 894 ms
2023-04-12 20:05:09,882 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 20:05:09,904 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-30 - Starting...
2023-04-12 20:05:09,915 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-30 - Start completed.
2023-04-12 20:05:09,916 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 20:05:10,002 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 20:05:10,002 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:05:10,143 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 20:05:10,726 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 20:05:10,730 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b540f46, org.springframework.security.web.context.SecurityContextPersistenceFilter@3aeb3ea7, org.springframework.security.web.header.HeaderWriterFilter@75ff356, org.springframework.web.filter.CorsFilter@ebb457e, org.springframework.security.web.authentication.logout.LogoutFilter@597ef5df, com.tomassamper.apilol.security.JwtRequestFilter@39a117be, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7e31dbc7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@60c5214, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@370aa1af, org.springframework.security.web.session.SessionManagementFilter@78688b60, org.springframework.security.web.access.ExceptionTranslationFilter@273c7441, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@39c270cf]
2023-04-12 20:05:10,834 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 20:05:10,845 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 20:05:10,849 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 20:05:10,856 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.042 seconds (JVM running for 29809.911)
2023-04-12 20:05:10,857 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 20:05:17,127 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 20:05:17,129 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 20:05:17,131 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2023-04-12 20:05:35,758 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 20:05:35,851 INFO org.apache.juli.logging.DirectJDKLog [Thread-115] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:05:35,851 INFO org.apache.juli.logging.DirectJDKLog [Thread-115] Stopping service [Tomcat]
2023-04-12 20:05:35,852 INFO org.apache.juli.logging.DirectJDKLog [Thread-115] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 20:05:35,856 WARN org.apache.juli.logging.DirectJDKLog [Thread-115] The web application [ROOT] appears to have started a thread named [HikariPool-30 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:05:35,857 INFO org.apache.juli.logging.DirectJDKLog [Thread-115] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 20:05:35,859 INFO org.apache.juli.logging.DirectJDKLog [Thread-115] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 20:05:35,862 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-115] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:05:35,863 INFO com.zaxxer.hikari.HikariDataSource [Thread-115] HikariPool-30 - Shutdown initiated...
2023-04-12 20:05:35,867 INFO com.zaxxer.hikari.HikariDataSource [Thread-115] HikariPool-30 - Shutdown completed.
2023-04-12 20:05:36,123 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 20:05:36,124 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 20:05:36,908 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:05:36,908 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 20:05:36,956 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:36,960 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:36,964 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:36,967 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:36,971 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:36,974 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:36,977 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:05:36,978 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 69 ms. Found 0 JDBC repository interfaces.
2023-04-12 20:05:36,985 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:05:36,985 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 20:05:37,062 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 76 ms. Found 7 JPA repository interfaces.
2023-04-12 20:05:37,167 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 20:05:37,168 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:05:37,168 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 20:05:37,168 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 20:05:37,264 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 20:05:37,264 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1136 ms
2023-04-12 20:05:37,358 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 20:05:37,370 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-31 - Starting...
2023-04-12 20:05:37,382 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-31 - Start completed.
2023-04-12 20:05:37,383 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 20:05:37,483 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 20:05:37,483 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:05:37,633 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 20:05:38,189 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 20:05:38,193 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@487c7fbc, org.springframework.security.web.context.SecurityContextPersistenceFilter@3e34584e, org.springframework.security.web.header.HeaderWriterFilter@7d402521, org.springframework.web.filter.CorsFilter@778b5233, org.springframework.security.web.authentication.logout.LogoutFilter@3f83a4f8, com.tomassamper.apilol.security.JwtRequestFilter@3c5bf92f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@10bf93c4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c2ac5df, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f529271, org.springframework.security.web.session.SessionManagementFilter@2e9c3213, org.springframework.security.web.access.ExceptionTranslationFilter@6828c1a5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6340ecf9]
2023-04-12 20:05:38,280 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 20:05:38,290 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 20:05:38,294 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 20:05:38,301 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.246 seconds (JVM running for 29837.357)
2023-04-12 20:05:38,303 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 20:05:43,470 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 20:05:43,472 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 20:05:43,475 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 3 ms
2023-04-12 20:05:43,565 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [http-nio-8080-exec-1] Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:552)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:442)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:209)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.tomassamper.apilol.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:05:43,568 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["lastLogin"])] with root cause
java.lang.StackOverflowError: null
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:720)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$NumberPrinterParser.format(DateTimeFormatterBuilder.java:2702)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2341)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2341)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2341)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1843)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1817)
	at java.base/java.time.LocalDateTime.format(LocalDateTime.java:1752)
	at com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer.serialize(LocalDateTimeSerializer.java:77)
	at com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer.serialize(LocalDateTimeSerializer.java:37)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
2023-04-12 20:05:43,586 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [http-nio-8080-exec-3] Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:552)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:442)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:209)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1331)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1142)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.tomassamper.apilol.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:05:43,608 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["leagues"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.League["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.tomassamper.apilol.domain.User["lastLogin"])] with root cause
java.lang.StackOverflowError: null
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$NumberPrinterParser.format(DateTimeFormatterBuilder.java:2702)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2341)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2341)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1843)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1817)
	at java.base/java.time.LocalDateTime.format(LocalDateTime.java:1752)
	at com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer.serialize(LocalDateTimeSerializer.java:77)
	at com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer.serialize(LocalDateTimeSerializer.java:37)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
2023-04-12 20:09:02,490 INFO org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener [File Watcher] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-04-12 20:09:02,588 INFO org.apache.juli.logging.DirectJDKLog [Thread-119] Pausing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:09:02,589 INFO org.apache.juli.logging.DirectJDKLog [Thread-119] Stopping service [Tomcat]
2023-04-12 20:09:02,590 INFO org.apache.juli.logging.DirectJDKLog [Thread-119] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-04-12 20:09:02,593 WARN org.apache.juli.logging.DirectJDKLog [Thread-119] The web application [ROOT] appears to have started a thread named [HikariPool-31 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234)
 java.base@11.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2123)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@11.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114)
 java.base@11.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
 java.base@11.0.10/java.lang.Thread.run(Thread.java:834)
2023-04-12 20:09:02,594 INFO org.apache.juli.logging.DirectJDKLog [Thread-119] Stopping ProtocolHandler ["http-nio-8080"]
2023-04-12 20:09:02,596 INFO org.apache.juli.logging.DirectJDKLog [Thread-119] Destroying ProtocolHandler ["http-nio-8080"]
2023-04-12 20:09:02,599 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-119] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:09:02,600 INFO com.zaxxer.hikari.HikariDataSource [Thread-119] HikariPool-31 - Shutdown initiated...
2023-04-12 20:09:02,603 INFO com.zaxxer.hikari.HikariDataSource [Thread-119] HikariPool-31 - Shutdown completed.
2023-04-12 20:09:02,803 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting ChampLolApi21Application using Java 11.0.10 on TrasWan with PID 41304 (C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1\target\classes started by TrasWan in C:\Users\PcCom1\eclipse-workspace\champLolAPI2-1)
2023-04-12 20:09:02,803 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-04-12 20:09:03,345 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:09:03,346 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-04-12 20:09:03,394 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.ChampionRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:09:03,396 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.CountryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:09:03,399 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.LeagueRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:09:03,422 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.PlayerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:09:03,425 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.RoleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:09:03,428 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.TeamRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:09:03,430 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.tomassamper.apilol.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-04-12 20:09:03,431 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 83 ms. Found 0 JDBC repository interfaces.
2023-04-12 20:09:03,440 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-12 20:09:03,441 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-04-12 20:09:03,524 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 83 ms. Found 7 JPA repository interfaces.
2023-04-12 20:09:03,633 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-04-12 20:09:03,634 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2023-04-12 20:09:03,634 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-04-12 20:09:03,634 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-04-12 20:09:03,725 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-04-12 20:09:03,725 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 919 ms
2023-04-12 20:09:03,802 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-04-12 20:09:03,814 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-32 - Starting...
2023-04-12 20:09:03,825 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-32 - Start completed.
2023-04-12 20:09:03,825 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-04-12 20:09:03,910 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-04-12 20:09:03,910 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-04-12 20:09:04,055 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-04-12 20:09:04,675 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-04-12 20:09:04,679 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2817f54a, org.springframework.security.web.context.SecurityContextPersistenceFilter@5b5bc573, org.springframework.security.web.header.HeaderWriterFilter@6bac169d, org.springframework.web.filter.CorsFilter@727e0aea, org.springframework.security.web.authentication.logout.LogoutFilter@3510fba, com.tomassamper.apilol.security.JwtRequestFilter@25ad4154, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d39c8ac, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@762a3168, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4342628d, org.springframework.security.web.session.SessionManagementFilter@4466930e, org.springframework.security.web.access.ExceptionTranslationFilter@1d577276, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@41efa291]
2023-04-12 20:09:04,754 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-04-12 20:09:04,765 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2023-04-12 20:09:04,768 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-04-12 20:09:04,776 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started ChampLolApi21Application in 2.025 seconds (JVM running for 30043.831)
2023-04-12 20:09:04,778 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2023-04-12 20:09:50,882 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-04-12 20:09:50,883 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-04-12 20:09:50,886 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 3 ms
